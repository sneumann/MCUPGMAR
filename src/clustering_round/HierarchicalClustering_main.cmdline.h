/* HierarchicalClustering_main.cmdline.h */

/* File autogenerated by gengetopt version 2.19.1  */

#ifndef HIERARCHICALCLUSTERING_MAIN_CMDLINE_H
#define HIERARCHICALCLUSTERING_MAIN_CMDLINE_H

/* If we use autoconf.  */
#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#ifndef CMDLINE_PARSER_PACKAGE
#define CMDLINE_PARSER_PACKAGE "hierarchical_clustering (MC-UPGMA)"
#endif

#ifndef CMDLINE_PARSER_VERSION
#define CMDLINE_PARSER_VERSION "2.0"
#endif

struct gengetopt_args_info
{
  const char *help_help; /* Print help and exit help description.  */
  const char *version_help; /* Print version and exit help description.  */
  float max_distance_arg;	/* Max possible distance between two singletons (\\psi). Used for missing edges when averaging across clusters. .  */
  char * max_distance_orig;	/* Max possible distance between two singletons (\\psi). Used for missing edges when averaging across clusters.  original value given at command line.  */
  const char *max_distance_help; /* Max possible distance between two singletons (\\psi). Used for missing edges when averaging across clusters.  help description.  */
  int max_cluster_index_arg;	/* Index of the last singleton (may be more than that).  */
  char * max_cluster_index_orig;	/* Index of the last singleton (may be more than that) original value given at command line.  */
  const char *max_cluster_index_help; /* Index of the last singleton (may be more than that) help description.  */
  int number_of_input_edges_arg;	/* Memory constraint - maximum number of edges to load from input.  */
  char * number_of_input_edges_orig;	/* Memory constraint - maximum number of edges to load from input original value given at command line.  */
  const char *number_of_input_edges_help; /* Memory constraint - maximum number of edges to load from input help description.  */
  char * average_type_arg;	/* {arithmetic, geometric, minimum, maximum} - the clustering objective (e.g. average-linkage, complete-linkage etc.). (default='arithmetic').  */
  char * average_type_orig;	/* {arithmetic, geometric, minimum, maximum} - the clustering objective (e.g. average-linkage, complete-linkage etc.). original value given at command line.  */
  const char *average_type_help; /* {arithmetic, geometric, minimum, maximum} - the clustering objective (e.g. average-linkage, complete-linkage etc.). help description.  */
  char * input_cluster_edges_file_arg;	/* Cluster (or singleton) edges (format: cluster1 cluster2 distance) (default='-').  */
  char * input_cluster_edges_file_orig;	/* Cluster (or singleton) edges (format: cluster1 cluster2 distance) original value given at command line.  */
  const char *input_cluster_edges_file_help; /* Cluster (or singleton) edges (format: cluster1 cluster2 distance) help description.  */
  char * output_merges_file_name_arg;	/* Output merges file (default='-').  */
  char * output_merges_file_name_orig;	/* Output merges file original value given at command line.  */
  const char *output_merges_file_name_help; /* Output merges file help description.  */
  char * input_cluster_sizes_file_name_arg;	/* Initial size of each input cluster (singleton size).  */
  char * input_cluster_sizes_file_name_orig;	/* Initial size of each input cluster (singleton size) original value given at command line.  */
  const char *input_cluster_sizes_file_name_help; /* Initial size of each input cluster (singleton size) help description.  */
  char * output_cluster_sizes_file_name_arg;	/* End size of each output cluster (cluster size).  */
  char * output_cluster_sizes_file_name_orig;	/* End size of each output cluster (cluster size) original value given at command line.  */
  const char *output_cluster_sizes_file_name_help; /* End size of each output cluster (cluster size) help description.  */
  int allow_non_dendrogram_flag;	/* Allows merging of provably minimal edge intervals, even if the exact merge score (cluster height in dendrogram) is not known at merge time due to partial knowledge implied by the memory constraint. This option allows further clustering per round, thus speeding up the wholse clustering process considerably, by posing a less strict requirement on the output - now the cluster heights are no longer required to be exact. Currently, an upper bound on the merge score is output in this case. (default=off).  */
  const char *allow_non_dendrogram_help; /* Allows merging of provably minimal edge intervals, even if the exact merge score (cluster height in dendrogram) is not known at merge time due to partial knowledge implied by the memory constraint. This option allows further clustering per round, thus speeding up the wholse clustering process considerably, by posing a less strict requirement on the output - now the cluster heights are no longer required to be exact. Currently, an upper bound on the merge score is output in this case. help description.  */
  
  int help_given ;	/* Whether help was given.  */
  int version_given ;	/* Whether version was given.  */
  int max_distance_given ;	/* Whether max-distance was given.  */
  int max_cluster_index_given ;	/* Whether max-cluster-index was given.  */
  int number_of_input_edges_given ;	/* Whether number-of-input-edges was given.  */
  int average_type_given ;	/* Whether average-type was given.  */
  int input_cluster_edges_file_given ;	/* Whether input-cluster-edges-file was given.  */
  int output_merges_file_name_given ;	/* Whether output-merges-file-name was given.  */
  int input_cluster_sizes_file_name_given ;	/* Whether input-cluster-sizes-file-name was given.  */
  int output_cluster_sizes_file_name_given ;	/* Whether output-cluster-sizes-file-name was given.  */
  int allow_non_dendrogram_given ;	/* Whether allow-non-dendrogram was given.  */

} ;

extern const char *gengetopt_args_info_purpose;
extern const char *gengetopt_args_info_usage;
extern const char *gengetopt_args_info_help[];

int cmdline_parser (int argc, char * const *argv,
  struct gengetopt_args_info *args_info);
int cmdline_parser2 (int argc, char * const *argv,
  struct gengetopt_args_info *args_info,
  int override, int initialize, int check_required);
int cmdline_parser_file_save(const char *filename,
  struct gengetopt_args_info *args_info);

void cmdline_parser_print_help(void);
void cmdline_parser_print_version(void);

void cmdline_parser_init (struct gengetopt_args_info *args_info);
void cmdline_parser_free (struct gengetopt_args_info *args_info);

int cmdline_parser_required (struct gengetopt_args_info *args_info,
  const char *prog_name);


#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* HIERARCHICALCLUSTERING_MAIN_CMDLINE_H */
